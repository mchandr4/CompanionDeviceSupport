// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/google/android/connecteddevice/calendarsync/common/update.proto

package com.google.android.connecteddevice.calendarsync;

/**
 * Protobuf type {@code aae.calendarsync.Color}
 */
public  final class Color extends
    com.google.protobuf.GeneratedMessageLite<
        Color, Color.Builder> implements
    // @@protoc_insertion_point(message_implements:aae.calendarsync.Color)
    ColorOrBuilder {
  private Color() {
  }
  public static final int ARGB_FIELD_NUMBER = 1;
  private int argb_;
  /**
   * <pre>
   * A color as an ARGB integer value.
   * </pre>
   *
   * <code>int32 argb = 1;</code>
   * @return The argb.
   */
  @java.lang.Override
  public int getArgb() {
    return argb_;
  }
  /**
   * <pre>
   * A color as an ARGB integer value.
   * </pre>
   *
   * <code>int32 argb = 1;</code>
   * @param value The argb to set.
   */
  private void setArgb(int value) {
    
    argb_ = value;
  }
  /**
   * <pre>
   * A color as an ARGB integer value.
   * </pre>
   *
   * <code>int32 argb = 1;</code>
   */
  private void clearArgb() {
    
    argb_ = 0;
  }

  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.google.android.connecteddevice.calendarsync.Color parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.google.android.connecteddevice.calendarsync.Color prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code aae.calendarsync.Color}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.google.android.connecteddevice.calendarsync.Color, Builder> implements
      // @@protoc_insertion_point(builder_implements:aae.calendarsync.Color)
      com.google.android.connecteddevice.calendarsync.ColorOrBuilder {
    // Construct using com.google.android.connecteddevice.calendarsync.Color.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * A color as an ARGB integer value.
     * </pre>
     *
     * <code>int32 argb = 1;</code>
     * @return The argb.
     */
    @java.lang.Override
    public int getArgb() {
      return instance.getArgb();
    }
    /**
     * <pre>
     * A color as an ARGB integer value.
     * </pre>
     *
     * <code>int32 argb = 1;</code>
     * @param value The argb to set.
     * @return This builder for chaining.
     */
    public Builder setArgb(int value) {
      copyOnWrite();
      instance.setArgb(value);
      return this;
    }
    /**
     * <pre>
     * A color as an ARGB integer value.
     * </pre>
     *
     * <code>int32 argb = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearArgb() {
      copyOnWrite();
      instance.clearArgb();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:aae.calendarsync.Color)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.google.android.connecteddevice.calendarsync.Color();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "argb_",
          };
          java.lang.String info =
              "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0004";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.google.android.connecteddevice.calendarsync.Color> parser = PARSER;
        if (parser == null) {
          synchronized (com.google.android.connecteddevice.calendarsync.Color.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.google.android.connecteddevice.calendarsync.Color>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:aae.calendarsync.Color)
  private static final com.google.android.connecteddevice.calendarsync.Color DEFAULT_INSTANCE;
  static {
    Color defaultInstance = new Color();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      Color.class, defaultInstance);
  }

  public static com.google.android.connecteddevice.calendarsync.Color getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Color> PARSER;

  public static com.google.protobuf.Parser<Color> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

